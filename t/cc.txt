# Copyright 2025 Leon Hwang.
# SPDX-License-Identifier: Apache-2.0

# These tests are for internal cc.

# pointer deref
name: cc::ptr-deref
tag: cc,ptr-deref,xdp
test: -k dev_xdp_install --output-arg '*prog' --output-arg '*prog->aux' --output-arg '*prog->aux->used_maps[0]' --output-arg '*dev' --output-arg '*dev->netdev_ops'
match: "type": BPF_PROG_TYPE_XDP
trigger: ./xdpcrc -d lo

---

# *skb
name: cc::*skb
tag: cc,ptr-deref,pkt,tp
test: -t netif_receive_skb --filter-pkt 'host 127.0.0.1 and icmp' --output-arg '*skb'
match: "cb":
trigger: ping -c 1 -s 64 127.0.0.1

---

# buf()
name: cc::buf
tag: cc,pkt,tp
test: -t netif_receive_skb --filter-pkt 'host 127.0.0.1 and icmp' --output-arg 'buf(skb->head + skb->mac_header, 34)' --output-arg 'buf(skb->cb, 4, 4)' --output-arg 'skb->mac_header' --output-arg 'skb->network_header'
match: 0x7f,0x00,0x00,0x01,0x7f,0x00,0x00,0x01
trigger: ping -c 1 -s 64 127.0.0.1

---

# pkt()
name: cc::pkt
tag: cc,pkt,tp
test: -t netif_receive_skb --filter-pkt 'host 127.0.0.1 and icmp' --output-arg 'pkt(skb->head + skb->mac_header, 34)'
match: SrcIP=127.0.0.1 DstIP=127.0.0.1
trigger: ping -c 1 -s 64 127.0.0.1

---

# addr
name: cc::addr
tag: cc,addr,tp
test: -t netif_receive_skb --filter-pkt 'host 127.0.0.1 and icmp' --output-arg 'ip42(skb->head + skb->network_header, 12)'
match: (unsigned char *)'ip42(skb->head + skb->network_header, 12)'=[127.0.0.1,127.0.0.1]
trigger: ping -c 1 -s 64 127.0.0.1

---

# port
name: cc::port
tag: cc,port,tp
test: -t netif_receive_skb --filter-pkt 'host 127.0.0.1 and tcp' --output-arg 'port(skb->head + skb->transport_header)'
match: (unsigned char *)'port(skb->head + skb->transport_header)'=8081
prerequisite: python3 -m http.server 8081
trigger: curl -s http://127.0.0.1:8081 --output /dev/null

---

# slice()
name: cc::slice
tag: cc,slice
test: -k dev_xdp_install --output-arg 'slice(prog->aux->used_maps, 1)'
match: (struct bpf_map *)'slice(prog->aux->used_maps, 1)'=[0xffff
trigger: ./xdpcrc -d lo

---

# hex()
name: cc::hex
tag: cc,hex
test: -t netif_receive_skb --filter-pkt 'host 127.0.0.1 and icmp' --output-arg 'hex(skb->head + skb->network_header + 12, 8)'
match: (unsigned char *)'hex(skb->head + skb->network_header + 12, 8)'=7f0000017f000001
trigger: ping -c 1 -s 64 127.0.0.1

---

# cast void
name: cc::cast-void
tag: cc,type-cast
test: -p 'n:crc' --filter-pkt 'host 127.0.0.1 and icmp' --output-arg '((struct iphdr *)(void *)(ctx->data + 14))->saddr'
match: (__be32)'((struct iphdr *)(void *)(ctx->data + 14))->saddr'=0x100007f/16777343
prerequisite: ./xdpcrc -d lo
trigger: ping -c 1 -s 64 127.0.0.1

---

# cast int
name: cc::cast-int
tag: cc,type-cast
test: -p 'n:crc' --filter-pkt 'host 127.0.0.1 and icmp' --output-arg '*(int *)(ctx->data + 14 + 12)'
match: (int)'*(int *)(ctx->data + 14 + 12)'=16777343
prerequisite: ./xdpcrc -d lo
trigger: ping -c 1 -s 64 127.0.0.1
